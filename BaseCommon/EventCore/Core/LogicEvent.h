//----------------------------------------------------------------------------------------
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : BaseLogicEvent.h
//  @ Date : 2011-5-25
//  @ Author : 杨文鸽
//
//----------------------------------------------------------------------------------------


#if !defined(_BASELOGICEVENT_H)
#define _BASELOGICEVENT_H

#include "CEvent.h"
#include "EventCore.h"


namespace Logic
{

	//-----------------------------------------------------------------------------
	// 逻辑事件，保存逻辑控制节点及数据
	//-----------------------------------------------------------------------------
	class EventCoreDll_Export LogicEvent : public CEvent
	{
	public:
		LogicEvent()
		{

		}
		virtual ~LogicEvent()
		{

		}

		virtual bool _AutoFinish() { return false; }

	public:
		virtual void _OnBegin();
		virtual bool _DoEvent();

		virtual void _OnFinish();
		virtual bool StartLogic(AutoEvent logic);

		virtual const char* GetBeginLogicName(void);

		virtual void SetMainLogic(AutoEvent mainLogic);

		AutoEvent GetMainLogic( void );

		virtual void _OnEventFinishNodify(AutoEvent event);

		virtual void InitData() override { mCurrentLogic.setNull(); }


	public:
		AutoEvent	mCurrentLogic;
	};
	//-----------------------------------------------------------------------------

	//-----------------------------------------------------------------------------
	class EventCoreDll_Export LogicEventFactory : public CEventFactory
	{
	public:
		LogicEventFactory()
		{

		}
		virtual ~LogicEventFactory()
		{

		}

	public:
		virtual AutoEvent NewEvent()
		{
			return MEM_NEW LogicEvent();
		}

		const AString& GetBeginLogicName()const{ return mBeginLogicName; }
		void SetBeginLogicName(const char* logicName){ mBeginLogicName = logicName; }

	protected:
		AString	mBeginLogicName;
	};
	//-----------------------------------------------------------------------------


}

#endif  //_BASELOGICEVENT_H
